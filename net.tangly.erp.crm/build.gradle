/*
 * Copyright 2006-2024 Marcel Baumann
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 *          https://apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
 * OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 *
 */

plugins {
    id 'java-common-conventions'
}

project.ext.groupId = 'net.tangly.erp'
project.ext.artifactId = 'crm'
project.version = "${projectVersion}"
project.ext.moduleName = "${project.ext.groupId}.${project.ext.artifactId}"
project.ext.inceptionYear = '2019'
project.description = "Customer Relationships Management bounded domain using Java 17 or higher (tangly llc)"

dependencies {
    implementation project(':net.tangly.apps')
    implementation project(':net.tangly.erp.invoices')
    implementation project(':net.tangly.commons')
    implementation project(':net.tangly.core')
    implementation project(':net.tangly.erp.shared')
    implementation project(':net.tangly.gleam')
    implementation project(':net.tangly.ui')

    implementation(libs.vaadin.core)
    implementation(libs.vaadin.embedded.jetty)
    implementation(libs.javalin) {
        exclude group: "org.eclipse.jetty"
        exclude group: "org.eclipse.jetty.websocket"
        exclude group: "com.fasterxml.jackson.core"
    }
    implementation(libs.javalin.openapi)
    implementation(libs.vaadin.socharts)
    implementation(libs.apache.commons.codec)
    implementation(libs.apache.commons.io)
    implementation(libs.apache.commons.csv)
    implementation(libs.eclispsestore.storage)
    implementation(libs.ical4j.core)
    implementation(libs.ical4j.vcard)
    annotationProcessor(libs.javalin.openapi.processor)

    testImplementation project(':net.tangly.apps')
    testImplementation(libs.vaadin.test)
}
